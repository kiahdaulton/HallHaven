@using HallHaven.Areas.Identity.Data;
@using Microsoft.AspNetCore.Identity;
@using HallHaven.Models;
@using System.Security.Claims;

@inject UserManager<HallHavenUser> _userManager
@model IEnumerable<HallHaven.Models.Form>

@{
    ViewData["Title"] = "Form";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1 style="padding-top: 15px; padding-bottom: 15px;">Manage Your Form</h1>

<p>
    <a asp-action="Create" class="btn btn-primary">Create New Form</a>
</p>

@* get logged in user and only display their form to edit if it exists *@
@foreach (var item in Model)
{
    var identityUser = await _userManager.GetUserAsync(User);
    var customId = identityUser.CustomUserId;

    // if form userid equals logged in user id, then display the edit form for the logged in user
    @if (item.UserId == customId)
    {
        <p>
            <a asp-action="Edit" asp-route-id="@item.FormId" class="btn btn-primary">Edit Existing Form</a>
        </p>
    }
    else
    {
        // display no edit button if form is not created
    }

}

<div class="d-flex justify-content-center">
    <img style="width: 30vw; height: auto;"
         src="/images/threeCollegeStudents.jpg" alt="Three college students study on the grass with their books" />
</div>

@*
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.IsCandiateStudent)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IsStudentAthlete)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.NeatnessLevel)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.VisitorLevel)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FitnessLevel)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.AcademicLevel)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.SocialLevel)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.SharingLevel)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.BackgroundNoiseLevel)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.BedTimeRanking)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ModestyLevel)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.NumberOfBelongings)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CreditHour)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Dorm)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Major)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.User)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.IsCandiateStudent)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.IsStudentAthlete)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.NeatnessLevel)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.VisitorLevel)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.FitnessLevel)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.AcademicLevel)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.SocialLevel)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.SharingLevel)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.BackgroundNoiseLevel)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.BedTimeRanking)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ModestyLevel)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.NumberOfBelongings)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CreditHour.CreditHourId)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Dorm.DormId)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Major.MajorId)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.User.UserId)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.FormId">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.FormId">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.FormId">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>*@
