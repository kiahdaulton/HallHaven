@using HallHaven.Areas.Identity.Data;
@using Microsoft.AspNetCore.Identity;
@using HallHaven.Models;
@using System.Security.Claims;

@inject UserManager<HallHavenUser> _userManager
@model IEnumerable<HallHaven.Models.Form>

@{
    ViewData["Title"] = "Form";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1 style="padding-top: 15px; padding-bottom: 15px;">Manage Your Form</h1>

<p>
    <a asp-action="Create" class="btn btn-primary">Create New Form</a>
</p>

@* get logged in user and only display their form to edit if it exists *@
@foreach (var item in Model)
{
    var identityUser = await _userManager.GetUserAsync(User);
    var customId = identityUser.CustomUserId;

    // if form userid equals logged in user id, then display the edit form for the logged in user
    @if (item.UserId == customId)
    {
        <p>
            <a asp-action="Edit" asp-route-id="@item.FormId" class="btn btn-primary">Edit Existing Form</a>
        </p>
    }
    else
    {
        // display no edit button if form is not created
    }

}

<div class="d-flex justify-content-center">
    <img style="width: 30vw; height: auto;"
         src="/images/threeCollegeStudents.jpg" alt="Three college students study on the grass with their books" />
</div>

