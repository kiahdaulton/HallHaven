@using HallHaven.Areas.Identity.Data;
@using Microsoft.AspNetCore.Identity;
@using HallHaven.Models;
@using System.Security.Claims;

@inject SignInManager<HallHavenUser> _signInManager
@inject UserManager<HallHavenUser> _userManager
@inject HallHaven.Data.HallHavenContext _context
@model HomeViewModel

@{
    ViewData["Title"] = "Home Page";
    var loggedInUser = await _userManager.GetUserAsync(User);
}
<div class="d-flex justify-content-center">
    <div class="row">
        <div style="position: relative;">

            <img style="width: 100vw; height: auto; opacity: 0.3;" src="/images/collegeDormwithStudent.jpg" alt="A female student walks beside a college dormitory." />
            <div class="text-overlay">
                @if (_signInManager.IsSignedIn(User))
                {
                    <h1 class="display-4">Welcome to Hall Haven</h1>
                    <h1 class="display-4">@loggedInUser.DisplayName!</h1>
                }
                else
                {
                    <h1 class="display-4">Welcome to Hall Haven</h1>
                }
            </div>
            <link rel="preload" href="/images/HallHavenLogov2Transparent.png" as="image">
            <div class="logo-overlay">
                <img src="/images/HallHavenLogov2Transparent.png" alt="Hall Haven Logo" />
            </div>
        </div>
    </div>
</div>

@* Add user input to the email form *@
@*<form method="post" action="/Home/SendEmail">
    <button class="emailModalButton btn btn-primary" type="submit">Send Email</button>
</form>
*@

@* Display filtering dropdowns if user is logged in *@
@if (_signInManager.IsSignedIn(User))
{
    <div class="album py-5 d-none" id="filterWrap">
        <form method="post" asp-controller="Home" asp-action="Index" id="filterForm">
            @Html.AntiForgeryToken()

            <!-- dropdowns for filtering -->
            @Html.DropDownListFor(m => m.FormViewModel.SelectedDormId, Model.FormViewModel.Dorms, "All Dorms", new { @class = "form-control" })
            @Html.DropDownListFor(m => m.FormViewModel.SelectedCreditHourId, Model.FormViewModel.CreditHours, "All Credit Hours", new { @class = "form-control" })
            @Html.DropDownListFor(m => m.FormViewModel.SelectedMajorId, Model.FormViewModel.Majors, "All Majors", new { @class = "form-control" })

            <button type="submit" class="btn btn-primary">Filter</button>
        </form>
    </div>
}
else
{
 // display no filtering
}


<div class="album py-5">
    <div class="container">
        <div class="row row-cols-1 row-cols-sm-2 row-cols-md-3 g-3">
            @if (_signInManager.IsSignedIn(User))
            {
                @if (Model.Users.Count != 0)
                {
                    @foreach (User user in Model.Users)
                    {
                        // get logged in userId from identity table
                        var identityUser = await _userManager.GetUserAsync(User);
                        var customId = identityUser.CustomUserId;

                        @* if user is signed in, grab user id *@
                        @* if user id equals signed in user id *@
                        @if (user.UserId == customId)
                        {
                            // hide the logged in user
                        }
                        else
                        {
                            // display everyone else
                            // modal popup from user button
                            <div id="myModal-@user.UserId" class="modal fade">
                                <div class="modal-dialog">
                                    <div class="modal-content">
                                        <div class="modal-header">
                                            <h4 class="modal-title">@user.DisplayName's Biography</h4>
                                        </div>
                                        <div class="modal-body">
                                            <p>@user.ProfileBio</p>
                                        </div>
                                        <div class="modal-footer">
                                            <button type="button" class="btn btn-default closeModalBtn" data-target="#myModal-@user.UserId" data-dismiss="modal">Close</button>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            // email Modal
                            <div id="emailModal-@user.UserId" class="modal fade">
                                <div class="modal-dialog">
                                    <div class="modal-content">
                                        <div class="modal-header">
                                            <h4 class="modal-title">@user.DisplayName's Email</h4>
                                        </div>
                                        <div class="modal-body">
                                            <p>@user.Email</p>
                                            <form method="post" action="/Home/SendEmail">
                                                <input type="hidden" name="recipient" value="@user.Email" />
                                                <div class="form-group">
                                                    <label for="subject">Subject:</label>
                                                    <input type="text" class="form-control" id="subject" name="subject" />
                                                </div>
                                                <div class="form-group">
                                                    <label for="message">Message:</label>
                                                    <textarea class="form-control" id="message" name="message"></textarea>
                                                </div>
                                                <button type="submit" class="btn btn-primary">Send</button>
                                            </form>
                                        </div>
                                        <div class="modal-footer">
                                            <button type="button" class="btn btn-default closeEmailModalBtn" data-target="#emailModal-@user.UserId" data-dismiss="modal">Close</button>
                                        </div>
                                    </div>
                                </div>
                            </div>


                            <div class="col">
                                <div class="card shadow-sm">

                                    @if (user.ProfilePicture != null)
                                    {
                                        <img class="bd-placeholder-img card-img-top" style="width: 100%; height: 275px; object-fit: cover;" alt="User Profile Image"
                                             src="data:image/*;base64,@(Convert.ToBase64String(user.ProfilePicture))">
                                    }
                                    else
                                    {
                                        <img class="bd-placeholder-img card-img-top" style="width: 100%; height: 275px; object-fit: contain;"
                                             src="/images/user.png" alt="User Icon">
                                    }


                                    <div class="card-body">
                                        <div class="card-text">
                                            <h4 class="d-flex justify-content-center" style="text-align: center">@user.DisplayName</h4>
                                            @{
                                                // get each user's form (if not null) and grab major and dorm to be displayed
                                                var userForm = @user.Forms.Where(g => g.UserId == @user.UserId).ToList();
                                                if (userForm.Count() != 0)
                                                {
                                                    // get user majorId, dormId, and creditHourId
                                                    var major = userForm.First().MajorId;
                                                    var dorm = userForm.First().DormId;
                                                    var creditHour = userForm.First().CreditHourId;

                                                    // find user dorm name
                                                    var userDorm = _context.Dorms.Where(g => g.DormId == @dorm).ToList();
                                                    var dormName = userDorm.First().DormName;

                                                    // get credit hour classification
                                                    var credits = _context.CreditHours.Where(g => g.CreditHourId == @creditHour).ToList();
                                                    var classification = credits.First().Classification;

                                                    // find user major name
                                                    var userMajor = _context.Majors.Where(g => g.MajorId == @major).ToList();
                                                    var majorName = userMajor.First().MajorName;                                    

                                                    <div>Major: @majorName</div>
                                                    <div>Dorm: @dormName</div>
                                                    <div>Year: @classification</div>

                                                    var currentMatch = _context.Matches.Where(m => m.User1Id == customId);
                                                    if (currentMatch.Any())
                                                    {
                                                        // get percentage user2Id is the current iterated user
                                                        var match = currentMatch.FirstOrDefault(m => m.User2Id == @user.UserId);
                                                        if (match != null)
                                                        {
                                                            var simPercent = match.SimilarityPercentage;
                                                            // round to two decimal places
                                                            var roundedPercent = Math.Round(simPercent, 2);
                                                            <div>Percentage: @roundedPercent%</div>
                                                            
                                                        }
                                                        else
                                                        {
                                                            // Handle the case where no matching element is found
                                                            // hide user

                                                        }
                                                    }
                                                }
                                            }
                                            
                                        </div>

                                        <div class="d-flex justify-content-center align-items-center" style="margin-top: 15px;">
                                            <div class="btn-group">
                                                <button class="btn btn-outline-secondary modalButton" type="button" data-toggle="modal" data-target="#myModal-@user.UserId">
                                                    <img class="icon" src="/images/user.png" alt="User Icon" />
                                                </button>
                                                <button type="button" class="btn btn-outline-secondary emailModalButton" data-toggle="modal" data-target="#emailModal-@user.UserId">
                                                    <img class="icon" src="/images/mail.png" alt="Mail Icon" /></button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    }
                }
                else
                {
                    <div>There are were no students found. Try searching again.</div>
                }

            }

        </div>
    </div>
</div>

@section Scripts
    {
    <script type="text/javascript">
        $(document).ready(function () {
            $(".modalButton").click(function () {
                var userId = $(this).data("target").split("-")[1];
                $("#myModal-" + userId).modal("show");
            });
        });

        $(".closeModalBtn").click(function () {
            var userId = $(this).data("target").split("-")[1];
            $("#myModal-" + userId).modal("hide");
        });

        $(document).ready(function () {
            $(".emailModalButton").click(function () {
                var userId = $(this).data("target").split("-")[1];
                $("#emailModal-" + userId).modal("show");
            });
        });

        $(".closeEmailModalBtn").click(function () {
            var userId = $(this).data("target").split("-")[1];
            $("#emailModal-" + userId).modal("hide");
        });

        $(function () {
            // set hidden input values when dropdowns change
            $('select').on('change', function () {
                $('input[type=hidden][name=' + $(this).attr('id') + ']').val($(this).val());
            });
        });

        // display logo once page fully loads
        $(document).ready(function () {
            $('.logo-overlay').fadeIn('slow');
            $('.text-overlay').fadeIn('slow');
            $('.album').fadeIn('slow');
            const myForm = document.getElementById('filterWrap');
            myForm.classList.remove('d-none');         
        });
    </script>
}
