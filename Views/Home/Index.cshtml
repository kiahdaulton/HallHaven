@using HallHaven.Areas.Identity.Data;
@using Microsoft.AspNetCore.Identity;
@using HallHaven.Models;
@using System.Security.Claims;

@inject SignInManager<HallHavenUser> _signInManager
@inject UserManager<HallHavenUser> _userManager
@inject HallHaven.Data.HallHavenContext _context
@model HomeViewModel

@{
    ViewData["Title"] = "Home Page";
    var loggedInUser = await _userManager.GetUserAsync(User);
    //var currentUserId = loggedInUser.CustomUserId;
}
<div class="d-flex justify-content-center">
    <div class="row">
        <div style="position: relative;">

            <img style="width: 100vw; height: auto; opacity: 0.3;" src="/images/collegeDormwithStudent.jpg" alt="A female student walks beside a college dormitory." />
            <div class="text-overlay">
                @if (_signInManager.IsSignedIn(User))
                {
                    <h1 class="display-4">Welcome to Hall Haven</h1>
                    <h1 class="display-4">@loggedInUser.DisplayName!</h1>
                }
                else
                {
                    <h1 class="display-4">Welcome to Hall Haven</h1>
                }
            </div>
            <div class="logo-overlay">
                <img src="/images/HallHavenLogov2Transparent.png" alt="Hall Haven Logo" />
            </div>
        </div>
    </div>
</div>

<form method="post" asp-controller="Home" asp-action="Index">
    @Html.AntiForgeryToken()

    <!-- add hidden inputs for selected dropdown values -->
 @*   @Html.HiddenFor(m => m.FormViewModel.SelectedDormId)
    @Html.HiddenFor(m => m.FormViewModel.SelectedCreditHourId)
    @Html.HiddenFor(m => m.FormViewModel.SelectedMajorId)*@

    <!-- dropdowns for filtering -->
    @Html.DropDownListFor(m => m.FormViewModel.SelectedDormId, Model.FormViewModel.Dorms, "All Dorms", new { @class = "form-control" })
    @Html.DropDownListFor(m => m.FormViewModel.SelectedCreditHourId, Model.FormViewModel.CreditHours, "All Credit Hours", new { @class = "form-control" })
    @Html.DropDownListFor(m => m.FormViewModel.SelectedMajorId, Model.FormViewModel.Majors, "All Majors", new { @class = "form-control" })

    <button type="submit" class="btn btn-primary">Filter</button>
    @*<input type="submit" value="Filter" />*@
</form>

<div class="album py-5">
    <div class="container">
        <div class="row row-cols-1 row-cols-sm-2 row-cols-md-3 g-3">

            @if (_signInManager.IsSignedIn(User))
            {
                @if (Model.Users.Count != null)
                {
                    @foreach (User user in Model.Users)
                    {
                        // modal popup from user button
                        <div id="myModal-@user.UserId" class="modal fade">
                            <div class="modal-dialog">
                                <div class="modal-content">
                                    <div class="modal-header">
                                        <h4 class="modal-title">@user.DisplayName's Biography</h4>
                                    </div>
                                    <div class="modal-body">
                                        <p>@user.ProfileBio</p>
                                    </div>
                                    <div class="modal-footer">
                                        <button type="button" class="btn btn-default closeModalBtn" data-target="#myModal-@user.UserId" data-dismiss="modal">Close</button>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="col">
                            <div class="card shadow-sm">

                                @if (user.ProfilePicture != null)
                                {
                                    <img class="bd-placeholder-img card-img-top" style="width: 100%; height: 275px; object-fit: cover;" alt="User Profile Image"
                                         src="data:image/*;base64,@(Convert.ToBase64String(user.ProfilePicture))">
                                }
                                else
                                {
                                    <img class="bd-placeholder-img card-img-top" style="width: 100%; height: 275px; object-fit: contain;"
                                         src="/images/user.png" alt="User Icon">
                                }


                                <div class="card-body">
                                    <div class="card-text">
                                        <h4 class="d-flex justify-content-center" style="text-align: center">@user.DisplayName</h4>
                                        <div>@user.UserId</div>
                                        <div>@user.Gender.Gender1</div>
                                        <div>@user.Email</div>
                                        @{
                                            // get each user's form (if not null) and grab major and dorm to be displayed
                                            var userForm = @user.Forms.Where(g => g.UserId == @user.UserId).ToList();
                                            if (userForm.Count() != 0)
                                            {         
                                                // get user majorId, dormId, and creditHourId
                                                var major = userForm.First().MajorId;
                                                var dorm = userForm.First().DormId;
                                                var creditHour = userForm.First().CreditHourId;

                                                // find user dorm name
                                                var userDorm = _context.Dorms.Where(g => g.DormId == @dorm).ToList();
                                                var dormName = userDorm.First().DormName;

                                                // get credit hour classification
                                                var credits = _context.CreditHours.Where(g => g.CreditHourId == @creditHour).ToList();
                                                var classification = credits.First().Classification;

                                                // find user major name
                                                var userMajor = _context.Majors.Where(g => g.MajorId == @major).ToList();
                                                var majorName = userMajor.First().MajorName;

                                                <div>Major: @majorName</div>
                                                <div>Dorm: @dormName</div>
                                                <div>Year: @classification</div>
                                            }
                                      }
                                        
                                        <div>Percentage</div>
                                    </div>

                                   @*<partial name="_FormPartial" />*@
     
                                    <div class="d-flex justify-content-center align-items-center" style="margin-top: 15px;">
                                        <div class="btn-group">
                                            <button class="btn btn-outline-secondary modalButton" type="button" data-toggle="modal" data-target="#myModal-@user.UserId">
                                                <img class="icon" src="/images/user.png" alt="User Icon" />
                                            </button>
                                            <button type="button" class="btn btn-outline-secondary"><img class="icon" src="/images/mail.png" alt="Mail Icon" /></button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                }
                else
                {
                    <div>There are no users.</div>
                }

            }

        </div>
    </div>
</div>

@section Scripts
    {
    <script type="text/javascript">
        $(document).ready(function () {
            $(".modalButton").click(function () {
                var userId = $(this).data("target").split("-")[1];
                $("#myModal-" + userId).modal("show");
            });
        });

        $(".closeModalBtn").click(function () {
            var userId = $(this).data("target").split("-")[1];
            $("#myModal-" + userId).modal("hide");
        });

        $(function () {
            // set hidden input values when dropdowns change
            $('select').on('change', function () {
                $('input[type=hidden][name=' + $(this).attr('id') + ']').val($(this).val());
            });
        });
    </script>
}
